* {
	box-sizing: border-box;
}

.card a {
  color: white;
  text-decoration: none;
}
.card p {
  margin-bottom: 1.25em;
}
.main-content {
  margin: 2em auto;
  width: 75%;
  margin: 0 auto;
}
.card {
  padding: 1.5em 1em;
  border: 1px solid #e1e1e1;
  border-radius: 0.25em;
  align-items: center;
}
.card h1 {
  font-family: 'Bree Serif', serif;
  color: #39abcd; 
  margin: 0;
  line-height: 1.25;
}
.btn {
  font-size: 0.85em;
  color: #fff;
  font-weight: bold;
  text-transform: uppercase;
  padding: 0.75em 1.5em;
  background-color: #39abcd;
  border-radius: 0.35em;
  display: block;
  width: 100%;
}
.material-icons {
  color: #42b4d6; 
  font-size: 2.25em;
}

.evo{
  height: 10px;
  width: 10px;
}

/* ===================================================================== 
   Practice CSS Grid Layout
======================================================================== */

/* Target the grid container */
.main-content {
    width: 95%;
    max-width: 1000px;
    
    /* Turn on the grid */
    display: grid;
    
    /*   
      Instruct the browser to automatically fit column tracks.
       - Use the Grid functions and keywords that auto-generate as many columns 
      necessary to fit the available space, without causing the grid to overflow.
       - Each column should not get narrower than 280px and, if the available space allows it, 
      each column should expand to take up 1 fraction of the free space.
    */
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    
    /* Apply a 20px gutter to rows and columns */ 
    grid-gap: 20px;
  }

  .card img{
   max-width: 80%;
  }

  .btn:hover, .btn:focus{
    background: #92bde7;
    color: white;
    outline: 0;
    transition: white 2s ease-out;
}

.proj{
  width: 76%;
  margin: 0 auto;
  background-color: skyblue;
  border-radius: 10% 10% 10% 10%;
}
.unnecessary{
  height: 19vh;
}

.card img{
  height: 25vh;
  width: 30vw;
}